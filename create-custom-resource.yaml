AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation to set up a custom CloudFormation resource with Lambda,
  and then call it in the same template.
Parameters:
  LambdaRuntime:
    Description: The Lambda runtime to use
    Type: String
    AllowedValues:
      - nodejs
      - nodejs4.3
      - nodejs6.10
      - nodejs8.10
      - java8
      - python2.7
      - python3.6
      - dotnetcore1.0
      - dotnetcore2.0
      - dotnetcore2.1
      - nodejs4.3-edge
      - go1.x
  HandlerName:
    Description: The name of the lambda handler
    Type: String
    Default: handler
  ModuleName:
    Description: The name of the JavaScript file
    Type: String
    Default: customresource
  S3Bucket:
    Description: The name of the bucket that contains your packaged source
    Type: String
  S3Key:
    Description: The name of the ZIP package
    Type: String
    Default: custom-resource.zip
Resources:
  CustomFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref 'S3Bucket'
        S3Key: !Ref 'S3Key'
      Handler: !Join ['', [!Ref 'ModuleName', ., !Ref 'HandlerName']]
      Role: !GetAtt 'LambdaExecutionRole.Arn'
      Runtime: !Ref 'LambdaRuntime'
      Timeout: '30'
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - ec2:DescribeImages
                Resource: '*'
  CustomResource:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !GetAtt 'CustomFunction.Arn'
      ParameterOne: Parameter to pass into Custom Lambda Function
Outputs:
  Message:
    Description: The message from the custom resource.
    Value: !GetAtt 'CustomResource.Message'
  CustomFunctionArn:
    Description: The arn of the custom resource function.
    Value: !GetAtt 'CustomFunction.Arn'